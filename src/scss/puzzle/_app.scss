$mq-col-2: ($mq-small, $mq-landscape);

@function board-width($mult) {
  @return calc((100vh * var(--board-scale) - #{$site-header-height}) * #{$mult});
}

@mixin col-2-grid-columns-with-gaps($sides, $center) {
  grid-template-columns:
  $sides
  minmax(200px, board-width(1))
  $center
  minmax(200px, auto)
  $sides;
}

.puzzle__app {

  display: grid;

  grid-template-columns: 1fr 1fr;
  grid-template-areas:
  'board    board'
  'timeline timeline'
  'state    moves';

  @include breakpoint($mq-col-2) {
    @include col-2-grid-columns-with-gaps(auto, $block-gap);
    grid-template-rows: auto board-width(2/3) board-width(1/3) auto;
    grid-template-areas:
    '. board . . .'
    '. board . moves .'
    '. board . state .'
    '. board . . .'
    'timeline timeline timeline timeline timeline';
  }

  @include breakpoint($mq-col-3) {
    @include col-2-grid-columns-with-gaps(0, $block-gap);
  }

  &__board {
    grid-area: board;
    @include breakpoint($mq-col-2) {
      /* Align vertically when zoomed out */
      display: flex;
      flex-flow: column;
      justify-content: center;
    }
    & .cg-board-wrap {
      @extend %square;
    }
  }
  &__moves {
    grid-area: moves;
    overflow-y: auto;
    placeholder { height: 100vh; }
    @include breakpoint($mq-col-2) {
    }
  }
  &__state {
    margin-top: $block-gap;
    grid-area: state;
    placeholder { height: 100% }
  }
  &__timeline {
    grid-area: timeline;
    placeholder { margin-top: $block-gap; height: 3rem; }
  }
}
