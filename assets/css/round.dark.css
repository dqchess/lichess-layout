/* Colors */
/* Primary: blue */
/* text over primary background */
/* Secondary: green */
/* text over secondary background */
/* Accent: orange */
/* text over accent background */
/* Brag: gold */
/* text over brag background */
/* Error: red */
/* text over brag background */
/* Fancy: pink */
/* text over brag background */
/* Borders */
/* Shadows */
/* Brag: gold */
/* Fancy: pink */
/* Common imports for all pages */
/* Widths */
/* Heights */
/* Orientations */
/* Capabilities */
/* Aliases */
/* var aliases */
.mini-board, .round__chess__board .cg-board-wrap {
  height: 0;
  padding-bottom: 100%;
  width: 100%;
}

placeholder,
.placeholder {
  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
}

html {
  box-sizing: border-box;
}

*, *::before, *::after {
  box-sizing: inherit;
  margin: 0;
  padding: 0;
}

@font-face {
  font-family: "lichess";
  src: url(../font/lichess82/fonts/lichess.woff) format("woff");
  font-weight: normal;
  font-style: normal;
}

/* cyrillic-ext */
@font-face {
  font-family: 'Noto Sans';
  font-style: normal;
  font-weight: 400;
  src: local("Noto Sans"), local("NotoSans"), url(https://fonts.gstatic.com/s/notosans/v7/o-0IIpQlx3QUlC5A4PNr6DRAW_0.woff2) format("woff2");
  unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
}

/* cyrillic */
@font-face {
  font-family: 'Noto Sans';
  font-style: normal;
  font-weight: 400;
  src: local("Noto Sans"), local("NotoSans"), url(https://fonts.gstatic.com/s/notosans/v7/o-0IIpQlx3QUlC5A4PNr4TRAW_0.woff2) format("woff2");
  unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
}

/* devanagari */
@font-face {
  font-family: 'Noto Sans';
  font-style: normal;
  font-weight: 400;
  src: local("Noto Sans"), local("NotoSans"), url(https://fonts.gstatic.com/s/notosans/v7/o-0IIpQlx3QUlC5A4PNr5DRAW_0.woff2) format("woff2");
  unicode-range: U+0900-097F, U+1CD0-1CF6, U+1CF8-1CF9, U+200C-200D, U+20A8, U+20B9, U+25CC, U+A830-A839, U+A8E0-A8FB;
}

/* greek-ext */
@font-face {
  font-family: 'Noto Sans';
  font-style: normal;
  font-weight: 400;
  src: local("Noto Sans"), local("NotoSans"), url(https://fonts.gstatic.com/s/notosans/v7/o-0IIpQlx3QUlC5A4PNr6TRAW_0.woff2) format("woff2");
  unicode-range: U+1F00-1FFF;
}

/* greek */
@font-face {
  font-family: 'Noto Sans';
  font-style: normal;
  font-weight: 400;
  src: local("Noto Sans"), local("NotoSans"), url(https://fonts.gstatic.com/s/notosans/v7/o-0IIpQlx3QUlC5A4PNr5jRAW_0.woff2) format("woff2");
  unicode-range: U+0370-03FF;
}

/* vietnamese */
@font-face {
  font-family: 'Noto Sans';
  font-style: normal;
  font-weight: 400;
  src: local("Noto Sans"), local("NotoSans"), url(https://fonts.gstatic.com/s/notosans/v7/o-0IIpQlx3QUlC5A4PNr6jRAW_0.woff2) format("woff2");
  unicode-range: U+0102-0103, U+0110-0111, U+1EA0-1EF9, U+20AB;
}

/* latin-ext */
@font-face {
  font-family: 'Noto Sans';
  font-style: normal;
  font-weight: 400;
  src: local("Noto Sans"), local("NotoSans"), url(https://fonts.gstatic.com/s/notosans/v7/o-0IIpQlx3QUlC5A4PNr6zRAW_0.woff2) format("woff2");
  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
}

/* latin */
@font-face {
  font-family: 'Noto Sans';
  font-style: normal;
  font-weight: 400;
  src: local("Noto Sans"), local("NotoSans"), url(../font/noto-sans-latin.woff2) format("woff2");
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}

/* cyrillic-ext */
@font-face {
  font-family: 'Noto Sans';
  font-style: normal;
  font-weight: 700;
  src: local("Noto Sans Bold"), local("NotoSans-Bold"), url(https://fonts.gstatic.com/s/notosans/v7/o-0NIpQlx3QUlC5A4PNjXhFVadyB1Wk.woff2) format("woff2");
  unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
}

/* cyrillic */
@font-face {
  font-family: 'Noto Sans';
  font-style: normal;
  font-weight: 700;
  src: local("Noto Sans Bold"), local("NotoSans-Bold"), url(https://fonts.gstatic.com/s/notosans/v7/o-0NIpQlx3QUlC5A4PNjXhFVYNyB1Wk.woff2) format("woff2");
  unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
}

/* devanagari */
@font-face {
  font-family: 'Noto Sans';
  font-style: normal;
  font-weight: 700;
  src: local("Noto Sans Bold"), local("NotoSans-Bold"), url(https://fonts.gstatic.com/s/notosans/v7/o-0NIpQlx3QUlC5A4PNjXhFVZdyB1Wk.woff2) format("woff2");
  unicode-range: U+0900-097F, U+1CD0-1CF6, U+1CF8-1CF9, U+200C-200D, U+20A8, U+20B9, U+25CC, U+A830-A839, U+A8E0-A8FB;
}

/* greek-ext */
@font-face {
  font-family: 'Noto Sans';
  font-style: normal;
  font-weight: 700;
  src: local("Noto Sans Bold"), local("NotoSans-Bold"), url(https://fonts.gstatic.com/s/notosans/v7/o-0NIpQlx3QUlC5A4PNjXhFVaNyB1Wk.woff2) format("woff2");
  unicode-range: U+1F00-1FFF;
}

/* greek */
@font-face {
  font-family: 'Noto Sans';
  font-style: normal;
  font-weight: 700;
  src: local("Noto Sans Bold"), local("NotoSans-Bold"), url(https://fonts.gstatic.com/s/notosans/v7/o-0NIpQlx3QUlC5A4PNjXhFVZ9yB1Wk.woff2) format("woff2");
  unicode-range: U+0370-03FF;
}

/* vietnamese */
@font-face {
  font-family: 'Noto Sans';
  font-style: normal;
  font-weight: 700;
  src: local("Noto Sans Bold"), local("NotoSans-Bold"), url(https://fonts.gstatic.com/s/notosans/v7/o-0NIpQlx3QUlC5A4PNjXhFVa9yB1Wk.woff2) format("woff2");
  unicode-range: U+0102-0103, U+0110-0111, U+1EA0-1EF9, U+20AB;
}

/* latin-ext */
@font-face {
  font-family: 'Noto Sans';
  font-style: normal;
  font-weight: 700;
  src: local("Noto Sans Bold"), local("NotoSans-Bold"), url(https://fonts.gstatic.com/s/notosans/v7/o-0NIpQlx3QUlC5A4PNjXhFVatyB1Wk.woff2) format("woff2");
  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
}

/* latin */
@font-face {
  font-family: 'Noto Sans';
  font-style: normal;
  font-weight: 700;
  src: local("Noto Sans Bold"), local("NotoSans-Bold"), url(../font/noto-sans-bold-latin.woff2) format("woff2");
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}

/* cyrillic-ext */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 300;
  src: local("Roboto Light"), local("Roboto-Light"), url(https://fonts.gstatic.com/s/roboto/v18/KFOlCnqEu92Fr1MmSU5fCRc4EsA.woff2) format("woff2");
  unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
}

/* cyrillic */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 300;
  src: local("Roboto Light"), local("Roboto-Light"), url(https://fonts.gstatic.com/s/roboto/v18/KFOlCnqEu92Fr1MmSU5fABc4EsA.woff2) format("woff2");
  unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
}

/* greek-ext */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 300;
  src: local("Roboto Light"), local("Roboto-Light"), url(https://fonts.gstatic.com/s/roboto/v18/KFOlCnqEu92Fr1MmSU5fCBc4EsA.woff2) format("woff2");
  unicode-range: U+1F00-1FFF;
}

/* greek */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 300;
  src: local("Roboto Light"), local("Roboto-Light"), url(https://fonts.gstatic.com/s/roboto/v18/KFOlCnqEu92Fr1MmSU5fBxc4EsA.woff2) format("woff2");
  unicode-range: U+0370-03FF;
}

/* vietnamese */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 300;
  src: local("Roboto Light"), local("Roboto-Light"), url(https://fonts.gstatic.com/s/roboto/v18/KFOlCnqEu92Fr1MmSU5fCxc4EsA.woff2) format("woff2");
  unicode-range: U+0102-0103, U+0110-0111, U+1EA0-1EF9, U+20AB;
}

/* latin-ext */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 300;
  src: local("Roboto Light"), local("Roboto-Light"), url(https://fonts.gstatic.com/s/roboto/v18/KFOlCnqEu92Fr1MmSU5fChc4EsA.woff2) format("woff2");
  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
}

/* latin */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 300;
  src: local("Roboto Light"), local("Roboto-Light"), url(../font/roboto-light-latin.woff2) format("woff2");
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}

html {
  font: 1rem/1.6 'Noto Sans', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, Sans-Serif;
}

body {
  background: #171717 linear-gradient(to bottom, #303030, #171717 116px) no-repeat;
  color: #b3b3b3;
  overflow-x: hidden;
}

a {
  color: #58a4eb;
  text-decoration: none;
  cursor: pointer;
}

a:hover, a:active, a:focus {
  color: #3692e7;
}

body {
  --site-header-height: 40px;
  --main-margin: 0;
}

@media (min-height: 500px) {
  body {
    --site-header-height: 60px;
  }
}

@media (min-width: 1000px) {
  body {
    --main-margin: 1.5vmin;
    margin-bottom: 1.5vmin;
  }
}

#main-wrap {
  display: grid;
  grid-template-columns: var(--main-margin) 1fr minmax(auto, 1300px) 1fr var(--main-margin);
  grid-template-areas: '. . main . .';
}

main {
  grid-area: main;
  display: grid;
  grid-gap: 1.5vmin 1.5vmin;
}

.is::before,
[data-icon]::before,
.user_link .line,
.is-after::after {
  font-size: 1.2em;
  vertical-align: middle;
  font-family: "lichess" !important;
  font-style: normal !important;
  font-weight: normal !important;
  text-transform: none !important;
  speak: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  content: attr(data-icon);
}

.is.text::before,
.text[data-icon]::before {
  margin-right: 0.27em;
}

[data-icon].is2::before {
  font-size: 20px;
}

[data-icon].is3::before {
  font-size: 22px;
}

[data-icon].is4::before {
  font-size: 30px;
}

/*
 * Chessground base css properties.
 *
 * You need to include the css files in themes folder in order to have the
 * board and pieces displayed!
 */
.cg-board {
  position: absolute;
  width: 100%;
  height: 100%;
  user-select: none;
  line-height: 0;
  background-size: cover;
  cursor: pointer;
}

.cg-board square {
  position: absolute;
  width: 12.5%;
  height: 12.5%;
  pointer-events: none;
}

.cg-board square.move-dest {
  background: radial-gradient(rgba(20, 85, 30, 0.5) 22%, #208530 0, rgba(0, 0, 0, 0.3) 0, rgba(0, 0, 0, 0) 0);
  pointer-events: auto;
}

.cg-board square.premove-dest {
  background: radial-gradient(rgba(20, 30, 85, 0.5) 22%, #203085 0, rgba(0, 0, 0, 0.3) 0, rgba(0, 0, 0, 0) 0);
}

.cg-board square.oc.move-dest {
  background: radial-gradient(transparent 0%, transparent 80%, rgba(20, 85, 0, 0.3) 80%);
}

.cg-board square.oc.premove-dest {
  background: radial-gradient(transparent 0%, transparent 80%, rgba(20, 30, 85, 0.2) 80%);
}

.cg-board square.move-dest:hover {
  background: rgba(20, 85, 30, 0.3);
}

.cg-board square.premove-dest:hover {
  background: rgba(20, 30, 85, 0.2);
}

.cg-board square.last-move {
  will-change: transform;
  background-color: rgba(155, 199, 0, 0.41);
}

.cg-board square.selected {
  background-color: rgba(20, 85, 30, 0.5);
}

.cg-board square.check {
  background: radial-gradient(ellipse at center, red 0%, #e70000 25%, rgba(169, 0, 0, 0) 89%, rgba(158, 0, 0, 0) 100%);
}

.cg-board square.current-premove {
  background-color: rgba(20, 30, 85, 0.5);
}

.cg-board-wrap {
  position: relative;
  /* prevents width issues with rank coords */
  overflow: hidden;
}

.cg-board-wrap piece {
  position: absolute;
  top: 0;
  left: 0;
  width: 12.5%;
  height: 12.5%;
  background-size: cover;
  z-index: 2;
  will-change: transform;
  pointer-events: none;
}

.cg-board-wrap piece.dragging {
  cursor: move;
  z-index: 9;
}

.cg-board-wrap piece.anim {
  z-index: 8;
}

.cg-board-wrap piece.fading {
  z-index: 1;
  opacity: 0.5;
}

.cg-board-wrap square.move-dest:hover {
  background-color: rgba(20, 85, 30, 0.3);
}

.cg-board-wrap piece.ghost {
  opacity: 0.3;
}

.cg-board-wrap svg {
  overflow: hidden;
  position: relative;
  top: 0px;
  left: 0px;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 2;
  opacity: 0.6;
}

.cg-board-wrap svg image {
  opacity: 0.5;
}

.cg-board-wrap coords {
  position: absolute;
  display: flex;
  pointer-events: none;
  opacity: 0.8;
  font-size: 10px;
}

.cg-board-wrap coords.ranks {
  right: -15px;
  top: 0;
  flex-flow: column-reverse;
  height: 100%;
  width: 12px;
}

.cg-board-wrap coords.ranks.black {
  flex-flow: column;
}

.cg-board-wrap coords.ranks coord {
  transform: translateY(39%);
}

.cg-board-wrap coords.files {
  bottom: -16px;
  left: 0;
  flex-flow: row;
  width: 100%;
  height: 16px;
  text-transform: uppercase;
  text-align: center;
}

.cg-board-wrap coords.files.black {
  flex-flow: row-reverse;
}

.cg-board-wrap coords coord {
  flex: 1 1 auto;
}

/*
 * Board
 */
.blue .cg-board-wrap {
  background-image: url("../../assets/img/chessground/board/blue.svg");
}

.cburnett piece.pawn.white {
  background-image: url("../../assets/img/chessground/piece/cburnett/wP.svg");
}

.cburnett piece.knight.white {
  background-image: url("../../assets/img/chessground/piece/cburnett/wN.svg");
}

.cburnett piece.bishop.white {
  background-image: url("../../assets/img/chessground/piece/cburnett/wB.svg");
}

.cburnett piece.rook.white {
  background-image: url("../../assets/img/chessground/piece/cburnett/wR.svg");
}

.cburnett piece.queen.white {
  background-image: url("../../assets/img/chessground/piece/cburnett/wQ.svg");
}

.cburnett piece.king.white {
  background-image: url("../../assets/img/chessground/piece/cburnett/wK.svg");
}

.cburnett piece.pawn.black {
  background-image: url("../../assets/img/chessground/piece/cburnett/bP.svg");
}

.cburnett piece.knight.black {
  background-image: url("../../assets/img/chessground/piece/cburnett/bN.svg");
}

.cburnett piece.bishop.black {
  background-image: url("../../assets/img/chessground/piece/cburnett/bB.svg");
}

.cburnett piece.rook.black {
  background-image: url("../../assets/img/chessground/piece/cburnett/bR.svg");
}

.cburnett piece.queen.black {
  background-image: url("../../assets/img/chessground/piece/cburnett/bQ.svg");
}

.cburnett piece.king.black {
  background-image: url("../../assets/img/chessground/piece/cburnett/bK.svg");
}

/* inner coords */
.cg-board-wrap coords {
  color: #fff;
  text-shadow: 0 1px 2px #000;
}

.cg-board-wrap coords.files {
  bottom: 0px;
  text-align: left;
}

.cg-board-wrap coords.files coord {
  padding-left: 2px;
}

.cg-board-wrap coords.ranks {
  right: -4px;
  text-align: left;
}

.cg-board-wrap coords.ranks coord {
  transform: none;
}

.brown coord, .green coord, .blue coord {
  text-shadow: none;
}

.blue .orientation-white .files coords:nth-child(2n+1),
.blue .orientation-white .ranks coords:nth-child(2n),
.blue .orientation-black .files coords:nth-child(2n),
.blue .orientation-black .ranks coords:nth-child(2n+1) {
  color: #DEE3E6;
}

.blue .orientation-white .files coord:nth-child(2n),
.blue .orientation-white .ranks coord:nth-child(2n+1),
.blue .orientation-black .files coord:nth-child(2n+1),
.blue .orientation-black .ranks coord:nth-child(2n) {
  color: #788a94;
}

#site-header {
  height: var(--site-header-height);
  display: flex;
  justify-content: space-between;
  position: relative;
  z-index: 5;
}

#site-header .dropdown {
  display: none;
  position: absolute;
  right: 0;
  top: 28px;
  background: #fff;
  z-index: 3;
  box-shadow: 2px 5px 6px rgba(0, 0, 0, 0.3);
}

#site-header .shown .dropdown {
  display: block;
}

#site-header .dropdown .initiating .spinner {
  padding: 10px 30px;
}

.site-title-nav {
  display: flex;
  justify-content: flex-start;
}

.site-title {
  font-size: 2rem;
  font-weight: normal;
  margin: 0 .5rem;
  display: none;
  line-height: calc(40px - 3px);
  font-size: 1.5rem;
}

@media (min-width: 500px) {
  .site-title {
    display: block;
  }
}

@media (min-height: 500px) {
  .site-title {
    line-height: 60px;
    font-size: 1.8rem;
  }
}

@media (min-height: 500px) and (min-width: 1000px) {
  .site-title {
    line-height: 52px;
    margin: 0 1rem;
  }
}

.site-title a {
  color: #b3b3b3;
  text-decoration: none;
}

.site-title a:hover {
  color: #3692e7;
}

.site-title a:hover span {
  color: #2e7cc5;
}

.site-title span {
  color: #989898;
}

.site-buttons {
  display: flex;
  align-items: center;
}

.site-buttons .link {
  color: #b3b3b3;
  font-size: 1.1rem;
  text-decoration: none;
  padding: 0 0.5rem;
}

.site-buttons .link:hover {
  color: #58a4eb;
}

@media (max-width: 999px) {
  .topnav-toggle {
    display: block;
    position: absolute;
    top: -9999px;
    left: -9999px;
  }
  .hamburger {
    position: relative;
    flex: 0 0 40px;
    cursor: pointer;
  }
}

@media (max-width: 999px) and (min-height: 500px) {
  .hamburger {
    flex-basis: 60px;
  }
}

@media (max-width: 999px) {
  .hamburger span {
    top: 50%;
    left: 8.5px;
    transition: transform 0.22s, cubic-bezier(0.55, 0.055, 0.675, 0.19);
  }
  .hamburger span, .hamburger span::after, .hamburger span::before {
    display: block;
    margin-top: -1.5px;
    position: absolute;
    width: 23px;
    height: 2px;
    border-radius: 3px;
    background-color: #989898;
  }
}

@media (max-width: 999px) and (min-height: 500px) {
  .hamburger span, .hamburger span::after, .hamburger span::before {
    width: 34px;
    height: 3px;
  }
}

@media (max-width: 999px) and (min-height: 500px) {
  .hamburger span {
    left: 13px;
  }
}

@media (max-width: 999px) {
  .hamburger span::after, .hamburger span::before {
    content: "";
  }
  .hamburger span::before {
    top: -6px;
    transition: top 0.1s 0.25s ease-in, opacity 0.1s ease-in;
  }
}

@media (max-width: 999px) and (min-height: 500px) {
  .hamburger span::before {
    top: -9px;
  }
}

@media (max-width: 999px) {
  .hamburger span::after {
    bottom: -7px;
    transition: bottom 0.1s 0.25s ease-in, transform 0.22s cubic-bezier(0.55, 0.055, 0.675, 0.19);
  }
}

@media (max-width: 999px) and (min-height: 500px) {
  .hamburger span::after {
    bottom: -10px;
  }
}

@media (max-width: 999px) {
  .topnav-toggle:checked ~ .hamburger {
    background: #2e2e2e;
  }
  .topnav-toggle:checked ~ .hamburger span {
    transform: rotate(225deg);
    transition-delay: 0.12s;
    transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
  }
  .topnav-toggle:checked ~ .hamburger span::before {
    top: 0;
    opacity: 0;
    transition: top 0.1s ease-out, opacity 0.1s 0.12s ease-out;
  }
  .topnav-toggle:checked ~ .hamburger span::after {
    bottom: 0;
    transform: rotate(-90deg);
    transition: bottom 0.1s ease-out, transform 0.22s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1);
  }
  #topnav {
    position: fixed;
    top: var(--site-header-height);
    bottom: 0;
    left: 0;
    background: #2e2e2e;
    transform: scale(0, 1);
    transform-origin: left;
    transition: transform 200ms ease-in-out;
    padding: 0 0 1.2rem 1.2rem;
    overflow-y: auto;
    white-space: nowrap;
    line-height: 40px;
    box-shadow: 2px 3px 6px rgba(0, 0, 0, 0.3);
    border-radius: 0 3px 0 0;
    display: flex;
    flex-flow: row wrap;
    max-width: 80%;
  }
}

@media (max-width: 999px) and (min-width: 500px) {
  #topnav {
    max-width: 70%;
  }
}

@media (max-width: 999px) {
  #topnav section {
    flex: 1 0 50%;
    margin-top: 1rem;
  }
  #topnav section > a {
    font-weight: bold;
  }
  #topnav section div {
    display: flex;
    flex-flow: column;
  }
  #topnav section div a {
    padding: 0 1.2rem;
  }
  #topnav section div a:hover {
    background: #3692e7;
    color: #fff;
  }
  #topnav a {
    color: #b3b3b3;
    text-decoration: none;
    opacity: 0;
    transition: opacity 75ms ease-in-out;
  }
  .topnav-toggle:checked ~ #topnav {
    transform: scale(1, 1);
  }
  .topnav-toggle:checked ~ #topnav a {
    opacity: 1;
    transition: opacity 125ms ease-in-out 125ms;
  }
  .topnav-mask {
    display: none;
  }
  .topnav-toggle:checked ~ .topnav-mask {
    display: block;
    position: fixed;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    background: rgba(0, 0, 0, 0.5);
    overflow-y: scroll;
  }
  body.masked {
    /* prevent scrolling while topnav is open */
    overflow: hidden;
    /* awkwardly make up for the disappearance of the scroll bar */
    /* actually don't, since on mobile devices the scrool bar
     * has no width, and that menu is mainly for mobile. */
  }
}

@media (min-width: 1000px) {
  .hamburger,
  .topnav-mask,
  .topnav-toggle {
    display: none;
  }
  #topnav {
    --nav-section: 26px;
    --nav-section-hover: 35px;
    display: flex;
  }
}

@media (min-width: 1000px) and (min-height: 500px) {
  #topnav {
    --nav-section: 48px;
    --nav-section-hover: 53px;
  }
}

@media (min-width: 1000px) {
  #topnav section {
    position: relative;
    height: var(--nav-section);
  }
  #topnav section > a {
    color: #989898;
    text-shadow: 0 1px 1px black;
    display: block;
    height: var(--nav-section);
    line-height: var(--site-header-height);
    padding: 0 0.7rem;
    text-transform: uppercase;
    border-left: 2px solid transparent;
  }
}

@media (min-width: 1000px) and (hover: none) {
  #topnav section > a {
    pointer-events: none;
  }
}

@media (min-width: 1000px) {
  #topnav section:hover > a, #topnav section:active > a {
    height: var(--nav-section-hover);
    background: #404040;
    color: #bebebe;
    border-color: #3692e7;
  }
  #topnav section:hover div, #topnav section:active div {
    display: block;
  }
  #topnav div {
    display: none;
    position: absolute;
    left: 0;
    background: #404040;
    width: 10rem;
    box-shadow: 2px 5px 6px rgba(0, 0, 0, 0.3);
    border-radius: 0 3px 3px 3px;
    border-left: 2px solid #3692e7;
  }
  #topnav div a {
    display: block;
    padding: .4rem .7rem;
    color: #bebebe;
  }
}

@media (min-width: 1000px) and (hover: none) {
  #topnav div a {
    padding: .5rem .7rem;
  }
}

@media (min-width: 1000px) {
  #topnav div a:hover {
    background: #3692e7;
    color: white;
  }
  #topnav div a:first-child {
    border-radius: 0 3px 0 0;
  }
  #topnav div a:last-child {
    border-radius: 0 0 3px 1px;
  }
  #topnav.blind div {
    display: block;
    margin-left: -9000px;
  }
}

@media (max-width: 799px) {
  .subnav {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(33%, 1fr));
    grid-gap: 1px;
    background: #171717;
    box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
    border-radius: 3px;
  }
  .subnav a {
    color: #b3b3b3;
    padding: 0.6rem 0.4rem 0.6rem 0.8rem;
    display: flex;
    align-items: center;
    background: #2e2e2e;
    border-radius: 3px;
  }
  .subnav a:hover {
    color: #58a4eb;
  }
  .subnav a.active {
    background: #3692e7;
    color: white;
    font-weight: bold;
  }
}

@media (min-width: 800px) {
  .subnav a {
    display: block;
    color: #b3b3b3;
    padding: 0.6rem 0.8rem;
    border-bottom: 1px solid black;
  }
  .subnav a:hover {
    color: #58a4eb;
    border-bottom: 1px solid #58a4eb;
  }
  .subnav a.active {
    border-radius: 3px 0 0 3px;
    background: #2e2e2e;
    font-weight: bold;
    box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
  }
}

placeholder,
.placeholder {
  width: 100%;
  height: 100%;
  background: #2e2e2e;
  display: flex;
  flex-flow: column;
  justify-content: center;
  align-items: center;
  text-transform: uppercase;
}

placeholder p, .placeholder p {
  text-transform: none;
}

.round {
  --board-scale: 1;
  grid-template-areas: 'chess' 'info-chat' 'ct-boards';
  /* 2 columns */
  /* 3 columns */
}

@media (min-width: 800px) and (min-height: 500px) {
  .round {
    --board-scale: calc((var(--zoom) / 100) * 0.5 + 0.5);
  }
}

@media (min-width: 650px) {
  .round {
    grid-template-columns: 2fr 3fr;
    grid-template-areas: 'chess      chess' 'info-chat  ct-boards';
  }
}

@media (min-width: 1120px) {
  .round {
    grid-template-columns: minmax(200px, 300px) minmax(600px, calc(100vh * var(--board-scale) - var(--site-header-height))) minmax(200px, 300px);
    grid-template-areas: 'info-chat  chess     chess      ' "under-chat ct-boards under-table";
  }
}

.round__chess {
  grid-area: chess;
}

.round__info-chat {
  grid-area: info-chat;
  display: flex;
  flex-flow: column nowrap;
}

.round__ct-boards {
  grid-area: ct-boards;
}

.round__under-chat {
  grid-area: under-chat;
  display: none;
}

@media (min-width: 1120px) {
  .round__under-chat {
    height: 200px;
    display: flex;
  }
}

.round__under-table {
  grid-area: under-table;
  display: none;
}

@media (min-width: 1120px) {
  .round__under-table {
    height: 200px;
    display: flex;
  }
}

.round__info {
  flex: 0 1 120px;
}

.chat__lines {
  margin-top: 1.5vmin;
  flex: 1 1 200px;
}

.chat__input {
  flex: 0 0 40px;
}

.game__crosstable {
  height: 100px;
}

.game__others {
  margin-top: 1.5vmin;
  height: 300px;
}

#zoom-input {
  display: none;
}

@media (min-width: 800px) and (min-height: 500px) {
  #zoom-input {
    display: block;
    position: fixed;
    bottom: 3px;
    right: 3px;
    width: 10vw;
  }
}

.round__chess {
  display: grid;
  grid-template-columns: 3fr 1fr;
  grid-template-rows: 60px auto 60px 60px 9rem;
  grid-template-areas: "user-op clock-op" "board   board" "user-pl clock-pl" "actions actions" "moves   moves";
}

@media (min-width: 650px), (orientation: landscape) {
  .round__chess {
    grid-template-columns: auto minmax(200px, calc((100vh * var(--board-scale) - var(--site-header-height)))) minmax(1.5vmin, auto) minmax(200px, auto) auto;
    grid-template-rows: auto 30px 60px 40px 0 60px 40px 60px 30px auto;
    grid-template-areas: ". board . ." ". board . mat-op" ". board . clock-op" ". board . user-op" ". board . ." ". board . actions" ". board . user-pl" ". board . clock-pl" ". board . mat-pl" ". board . .";
  }
}

@media (min-width: 650px) and (min-width: 650px) and (min-height: 500px), (orientation: landscape) and (min-width: 650px) and (min-height: 500px) {
  .round__chess {
    grid-template-rows: auto 30px 60px 40px auto 60px 40px 60px 30px auto;
    grid-template-areas: ". board . ." ". board . mat-op" ". board . clock-op" ". board . user-op" ". board . moves" ". board . actions" ". board . user-pl" ". board . clock-pl" ". board . mat-pl" ". board . .";
  }
}

@media (min-width: 1120px) {
  .round__chess {
    grid-template-columns: 0 minmax(200px, calc((100vh * var(--board-scale) - var(--site-header-height)))) 1.5vmin minmax(200px, auto) 0;
    grid-template-areas: ". board . ." ". board . mat-op" ". board . clock-op" ". board . user-op" ". board . moves" ". board . actions" ". board . user-pl" ". board . clock-pl" ". board . mat-pl" ". board . .";
  }
}

.round__chess__board {
  grid-area: board;
}

@media (min-width: 650px), (orientation: landscape) {
  .round__chess__board {
    /* Align vertically when zoomed out */
    display: flex;
    flex-flow: column;
    justify-content: center;
  }
}

@media (orientation: portrait) {
  .round__chess__board {
    /* In portrait single column, make sure both clocks and the board fit in the viewport.
       * If they don't, limit the board width */
    max-width: calc(100vh - var(--site-header-height) - (60px * 2));
  }
}

.round__chess__material-op {
  grid-area: mat-op;
}

.round__chess__material-pl {
  grid-area: mat-pl;
}

.round__chess__user-op {
  grid-area: user-op;
}

.round__chess__user-pl {
  grid-area: user-pl;
}

@media (min-width: 650px) {
  .round__chess__clock {
    width: 70%;
  }
}

.round__chess__clock-op {
  grid-area: clock-op;
}

.round__chess__clock-pl {
  grid-area: clock-pl;
}

.round__chess__moves {
  grid-area: moves;
}

@media (min-width: 650px), (orientation: landscape) {
  .round__chess__moves {
    display: none;
  }
}

@media (min-width: 650px) and (min-width: 650px) and (min-height: 500px), (orientation: landscape) and (min-width: 650px) and (min-height: 500px) {
  .round__chess__moves {
    height: 15vh;
    display: flex;
  }
}

.round__chess__actions {
  grid-area: actions;
}

.round__chess__user-op, .round__chess__user-pl {
  white-space: nowrap;
  justify-content: left;
  padding: 0.5rem;
  text-transform: none;
}

.round__chess__material-op, .round__chess__material-pl {
  display: none;
}

@media (min-width: 650px), (orientation: landscape) {
  .round__chess__material-op, .round__chess__material-pl {
    display: block;
  }
}

@media (min-width: 650px), (orientation: landscape) {
  .round__chess__material-op,
  .round__chess__clock-op,
  .round__chess__user-op,
  .round__chess__moves,
  .round__chess__actions,
  .round__chess__user-pl,
  .round__chess__clock-pl,
  .round__chess__material-pl {
    max-width: 30vw;
  }
  .round__chess__clock-op,
  .round__chess__clock-pl {
    max-width: 20vw;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
